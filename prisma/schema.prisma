generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model build {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  build_name   String    @db.VarChar(255)
  build_status String    @db.VarChar(50)
  start_time   DateTime  @db.Timestamp(6)
  end_time     DateTime? @db.Timestamp(6)
  user_id      String    @db.Uuid
  created_at   DateTime  @default(now()) @db.Timestamp(6)
  updated_at   DateTime  @default(now()) @db.Timestamp(6)
  user         user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  report       report[]
}

model project {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  project_name   String   @db.VarChar(255)
  project_status String   @db.VarChar(50)
  team_id        String   @db.Uuid
  created_at     DateTime @default(now()) @db.Timestamp(6)
  updated_at     DateTime @default(now()) @db.Timestamp(6)
  team           team     @relation(fields: [team_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model report {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  report_name   String   @db.VarChar(255)
  report_status String   @db.VarChar(50)
  test_run_id   String   @db.Uuid
  build_id      String   @db.Uuid
  created_at    DateTime @default(now()) @db.Timestamp(6)
  updated_at    DateTime @default(now()) @db.Timestamp(6)
  build         build    @relation(fields: [build_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  test_run      test_run @relation(fields: [test_run_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model team {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?   @db.VarChar(255)
  name        String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  user_id     String    @db.Uuid
  tenant_id   String    @db.VarChar(255)
  project     project[]
  user        user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model test_run {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  test_name  String    @db.VarChar(255)
  status     String    @db.VarChar(50)
  start_time DateTime  @db.Timestamp(6)
  end_time   DateTime? @db.Timestamp(6)
  user_id    String    @db.Uuid
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  report     report[]
  user       user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String     @unique @db.VarChar(255)
  firstName   String?    @db.VarChar(255)
  lastName    String?    @db.VarChar(255)
  roq_user_id String     @db.VarChar(255)
  tenant_id   String     @db.VarChar(255)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  build       build[]
  team        team[]
  test_run    test_run[]
}
